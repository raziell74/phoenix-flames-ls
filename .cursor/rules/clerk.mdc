---
description: Sets code quality rules for Clerk
globs: src/app/layout.{ts,tsx},src/app/api/**/*.{ts,tsx},middleware.{ts,js}, src/middleware.{ts,js},src/components/auth/**/*.{ts,tsx}
---
#### **User Authentication with Clerk**

- **Next.js Integration:**
  - Use Clerk’s recommended patterns to embed authentication into the App Router.
  - Ensure the app leverages Clerk’s providers and middleware to protect server routes and API endpoints.

- **Protected Routes & Components:**
  - Mark routes and components that require authentication using Clerk’s HOC (e.g., `withAuth`) or client-side hooks (e.g., `useUser`, `useSession`).
  - Redirect unauthenticated users to a sign‑in flow and conditionally render protected UI.

- **Session Management:**
  - Rely on Clerk’s session management for secure sign-ins, sign-outs, and profile updates.
  - Follow best practices for multi‑factor authentication and token validation.

- **Security & Error Handling:**
  - Implement robust error handling to capture authentication failures and provide clear user feedback.
  - Validate sensitive operations with Clerk token checks to ensure authorized access.

- **Maintenance:**
  - Document any customizations and adhere to Clerk’s evolving best practices to ease future updates.

- **Reference Documentation**
  - When unclear about how to best utilize Clerk's various tools you can reference Clerk's documentation here: @https://clerk.com/docs