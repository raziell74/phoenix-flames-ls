---
description: Sets code quality rules for Postgres
globs: src/server/db/**/*.{ts,js,sql}, migrations/**/*.{ts,js,sql}
---
#### **Postgres**

- **Database Design & Schema:**
  - Design schemas following normalization standards to minimize redundancy.
  - Define clear relationships with well‑structured primary and foreign keys.
  - Use consistent naming conventions for tables, columns, and constraints.

- **Indexes & Query Performance:**
  - Create indexes on frequently queried columns to boost performance.
  - Analyze and optimize queries to avoid bottlenecks while balancing write performance.

- **Security & Data Protection:**
  - Use parameterized queries to prevent SQL injection.
  - Enforce role‑based access and secure handling of sensitive data.
  - Apply encryption where needed to protect data at rest and in transit.

- **Transaction Management & Concurrency:**
  - Use transactions for multi‑step operations to ensure atomicity.
  - Keep transactions brief to minimize lock contention and improve concurrency.

- **Data Integrity & Constraints:**
  - Enforce data integrity with constraints such as NOT NULL, UNIQUE, CHECK, and FOREIGN KEY.
  - Use triggers or stored procedures judiciously for complex business logic.

- **Backup & Monitoring:**
  - Regularly back up data and monitor performance to adjust strategies as the dataset evolves.

- **Best Practices:**
  - Document schema designs and query logic to facilitate maintenance.
  - Periodically review and refine database strategies to align with evolving requirements.
